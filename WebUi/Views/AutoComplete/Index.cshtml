
<style>



    h3 {
        font-size: 23px;
        border-bottom: solid 3px #CCC;
        padding-bottom: 10px;
    }

    h3 a {
        color: #00e8ff;
        text-decoration: none;
    }

    h3 a:hover, h2 a:hover {
        text-decoration: underline;
    }



    .container #content {
        padding: 10px;
    }

    #reset {
        padding: 5px 10px;
        background: #4CAF50;
        border: none;
        color: #FFF;
        cursor: pointer;
    }

        #reset:hover {
            color: #4CAF50;
            background: #FFF;
        }

    #viewContent #searchInput, #viewContent #autoCompleteSelect {
        width: 430px;
    }

    #viewContent #searchInput {
        padding: 5px 0;
    }

    #viewContent #autoCompleteSelect option:hover {
        background-color: #d8fff7;
        cursor: pointer;
    }

</style>



<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
@*<script src="/mvc/Content/JS/jquery-2.2.4.js"></script>*@

<p></p>
<p>
    This part demonstrates performing the generation of the auto-complete values on the server.<br />
    We do it in two different ways: <br />
    1. We perform the autocomplete on the server using AJAX calls without promises<br />
    2. We use JQuery UI's autocomplete function after we pre-populated the list in the UI using an AJAX and we also make use of promises.
</p>

        <div id="viewContent">
            <input type="text" id="searchInput" placeholder="Enter a state" />
            <div id="autoCompleteDiv"></div>
        </div>

<p></p>
<p>This part pre-populates the full list using an ajax call and using JQuery's autocomplete features.</p>

<div class="ui-widget">
    <input id="myStates" placeholder="Enter a state" />
</div>


<script>

    var states;
    $(document).ready(function() {


        // This pre-populates a variable that will contain all possible auto-complete value.
        $.ajax({
                type: "GET",
                url: '@Url.Action("GetJQueryStates", "AutoComplete")',
                dataType: "html"
            })
            .done(function(result) {
                states = result.split(",");

                $('#myStates').autocomplete({
                    source: states
                });
            })
            .fail(function(xhr, status, error) {
                alert(xhr + " " + status + " " + error);
            });
    


        // The code below handles the MVC autocomplete.
        $("#searchInput").keyup(function (event) {
            if (event.which == 40) /*Arrow Down*/
            {
                $("#autoCompleteSelect").val($("#autoCompleteSelect option:first").val());
                $("#autoCompleteSelect").focus();
                $(this).val($("#autoCompleteSelect :selected").text());
            }
            else {
                if ($(this).val().length > 2) {
                    FillAutoComplete($(this).val());
                }
                else
                    $("#autoCompleteDiv").hide();
            }
        });



        //key up event

        function FillAutoComplete(value) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("MvcAutoComplete", "AutoComplete")' + '?searchValue=' + value,
                dataType: "html",
                success: function (result, status, xhr) {
                    $("#autoCompleteDiv").html(result.replace(/\$\$/g, '"'));
                    $("#autoCompleteDiv").show();
                },
                error: function (xhr, status, error) {
                    alert(xhr + " " + status + " " + error);
                }
            });
            return false;
        }

        $("#viewContent").on("change", "#autoCompleteSelect", function () {
            $("#searchInput").val($("#autoCompleteSelect :selected").text());
        });

        $("#viewContent").on("click", "#autoCompleteSelect", function () {
            $("#autoCompleteDiv").hide();
        });

    });
</script>

